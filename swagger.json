{
  "openapi": "3.0.0",
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          }
        },
        "summary": "User login",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/check": {
      "get": {
        "operationId": "AuthController_",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsUserLogged"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Check is user logged succesfully.",
        "tags": [
          "auth"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "AdminKey": []
          }
        ],
        "summary": "Create a new user (Admin required)",
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of users"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "AdminKey": []
          }
        ],
        "summary": "List all users (Admin required)",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "AdminKey": []
          }
        ],
        "summary": "Get user details by ID (Admin required)",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully updated"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "AdminKey": []
          }
        ],
        "summary": "Update user details (Admin required)",
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "UserController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "AdminKey": []
          }
        ],
        "summary": "Delete user (Admin required)",
        "tags": [
          "users"
        ]
      }
    },
    "/api/test": {
      "get": {
        "operationId": "ApiController_test",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Api"
        ]
      }
    },
    "/email/test": {
      "post": {
        "operationId": "EmailController_test",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Email"
        ]
      }
    },
    "/email/emails": {
      "post": {
        "operationId": "EmailController_emails",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns paginated list of emails"
          }
        },
        "tags": [
          "Email"
        ]
      }
    },
    "/email/email": {
      "post": {
        "operationId": "EmailController_email",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Email"
        ]
      }
    },
    "/account/test": {
      "post": {
        "operationId": "AccountController_test",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/account/accounts": {
      "post": {
        "operationId": "AccountController_accounts",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns paginated list of accounts"
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/account/account/{username}": {
      "get": {
        "operationId": "AccountController_account",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "description": "Username of the account to retrieve",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/robot/start-session/{sessionId}": {
      "post": {
        "operationId": "RobotController_startSession",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipeRunningSessionException"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "tags": [
          "Robot"
        ]
      }
    },
    "/robot/create-session/{sessionId}": {
      "post": {
        "operationId": "RobotController_createSession",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "tags": [
          "Robot"
        ]
      }
    },
    "/robot/stop-session/{sessionId}": {
      "post": {
        "operationId": "RobotController_stopSession",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItsNotRunningException"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "tags": [
          "Robot"
        ]
      }
    },
    "/robot/session/{sessionId}": {
      "get": {
        "operationId": "RobotController_session",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "tags": [
          "Robot"
        ]
      }
    },
    "/robot/sessions": {
      "get": {
        "operationId": "RobotController_sessions",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "tags": [
          "Robot"
        ]
      }
    }
  },
  "info": {
    "title": "",
    "description": "",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:3004/"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      },
      "AdminKey": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@mail.com",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "example": "password123!",
            "description": "User password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "IsUserLogged": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": true,
            "description": "Login status."
          }
        },
        "required": [
          "status"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@mail.com",
            "description": "User email address."
          },
          "password": {
            "type": "string",
            "example": "password123!",
            "description": "User password (Min 6 char!)",
            "minLength": 6
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {}
      },
      "PaginationDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "limit": {
            "type": "number",
            "description": "Number of items per page",
            "example": 10
          },
          "sortMode": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "Sorting direction",
            "example": "ASC",
            "default": "ASC"
          }
        },
        "required": [
          "page",
          "limit",
          "sortMode"
        ]
      },
      "EmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "MultipeRunningSessionException": {
        "type": "object",
        "properties": {}
      },
      "SessionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "status"
        ]
      },
      "ItsNotRunningException": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "It's not running, you can't stop."
          },
          "name": {
            "type": "string",
            "example": "its-not-running"
          }
        },
        "required": [
          "message",
          "name"
        ]
      }
    }
  }
}